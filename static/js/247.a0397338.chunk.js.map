{"version":3,"file":"static/js/247.a0397338.chunk.js","mappings":"0OAmEA,UArDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAeP,GAFxB,gBAENG,EAFM,EAENA,KACRC,EAAQD,GAHM,gDAKdK,QAAQC,IAAR,MALc,yDAAH,qDASfH,GACD,GAAE,CAACN,KAGF,UAAC,KAAD,YACE,SAAC,KAAD,UAAY,SAEXG,EAAKO,QACJ,SAAC,KAAD,UACGP,EAAKQ,KAAI,SAAAC,GAAK,OACb,UAAC,KAAD,CAAcC,UAAU,YAAxB,UACGD,EAAME,cACL,SAAC,KAAD,CACEC,IAAG,yCAAoCH,EAAME,cAC7CE,IAAG,UAAKJ,EAAMK,KAAX,eAGL,SAAC,KAAD,CACEF,IAAG,oDACHC,IAAG,UAAKJ,EAAMK,KAAX,eAIP,UAAC,KAAD,YACE,SAAC,KAAD,UAAWL,EAAMK,QACjB,yBAAG,cAAYL,EAAMM,kBAfgBN,EAAMO,GADlC,OAsBjB,SAAC,KAAD,UAAY,wDAMnB,C,uQC/DYC,EAAUC,EAAAA,GAAAA,IAAH,+CAIPC,EAAaD,EAAAA,GAAAA,GAAH,2FAOVE,EAAWF,EAAAA,GAAAA,GAAH,uHAQRG,EAAeH,EAAAA,GAAAA,GAAH,uXAkBZI,EAAWJ,EAAAA,GAAAA,IAAH,wBAGRK,EAAWL,EAAAA,GAAAA,GAAH,gDAIRM,EAAaN,EAAAA,GAAAA,EAAH,mNAUVO,EAAUP,EAAAA,GAAAA,IAAH,6M,mMCtDdQ,EAAW,6BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,qDAShBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACiDK,EADjD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMpC,GAAN,yFACLgC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACE7B,EADF,oBACqB8B,EADrB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQd1B,EAAc,mCAAG,WAAMP,GAAN,yFACLgC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACE7B,EADF,4BAC6B8B,EAD7B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAiB,mCAAG,WAAMrC,GAAN,yFACRgC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACE7B,EADF,6BAC8B8B,EAD9B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/api';\nimport {\n  CastHeader,\n  CastInfo,\n  CastList,\n  CastListItem,\n  CastName,\n  CastImg,\n  NoCastText,\n  Wrapper,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <CastHeader>Cast</CastHeader>\n\n      {cast.length ? (\n        <CastList>\n          {cast.map(actor => (\n            <CastListItem className=\"cast-card\" key={actor.id}>\n              {actor.profile_path ? (\n                <CastImg\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <CastImg\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n\n              <CastInfo>\n                <CastName>{actor.name}</CastName>\n                <p>Character: {actor.character}</p>\n              </CastInfo>\n            </CastListItem>\n          ))}\n        </CastList>\n      ) : (\n        <NoCastText>\n          We don't have any information about the cast yet.\n        </NoCastText>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const CastHeader = styled.h3`\n  font-size: 30px;\n  font-weight: 700;\n\n  margin-bottom: 20px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  padding: 0;\n`;\n\nexport const CastListItem = styled.li`\n  backdrop-filter: blur(10px);\n  padding: 10px;\n\n  width: 150px;\n  background-color: #fff;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 18px;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 10px 0px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    scale: 1.03;\n  }\n`;\n\nexport const CastInfo = styled.div`\n`;\n\nexport const CastName = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const NoCastText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  display: block;\n  width: 100%;\n  object-fit: cover;\n  object-position: center;\n`;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '04e4af1b30c05d104e5298e1179d6dc9';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  // console.log(data);\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchCast","fetchMovieCast","console","log","length","map","actor","className","profile_path","src","alt","name","character","id","Wrapper","styled","CastHeader","CastList","CastListItem","CastInfo","CastName","NoCastText","CastImg","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}