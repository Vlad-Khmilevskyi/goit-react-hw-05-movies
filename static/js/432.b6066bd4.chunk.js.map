{"version":3,"file":"static/js/432.b6066bd4.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 40px;\n  font-weight: 900;\n`;\nexport const StyledSectionForm = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const List = styled.ul`\n  color: #000;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n  text-decoration: none;\n\n  color: rgb(0 0 0);\n  cursor: pointer;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    color: #8d63df;\n  }\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`  \n  margin-right: 10px;\n  padding: 10px;\n  position: relative;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.14;\n  width: 280px;  \n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n  background-color: rgb(211 107 107);;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  padding: 10px\n`;","import PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { Button, Form, Input } from './SearchMovies.styled';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const query = e.target.elements.query.value;\n\n    if (!query) {\n      toast.error('Please enter something');\n      return;\n    }\n\n    onSubmit(query);\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default SearchMovies;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMovieByName } from '../services/api';\nimport SearchMovies from '../components/SearchMovies/SearchMovies';\nimport {\n  List,\n  ListItem,\n  SectionTitle,\n  StyledLink,\n  StyledSectionForm,\n} from '../components/MovieList/MovieList.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      try {\n        const { results } = await fetchMovieByName(query);\n\n        if (results.length === 0) {\n          toast.dismiss();\n          toast.error('No movies found');\n          setMovies([]);\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        setMovies([]);\n      }\n    };\n\n    getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main>\n      <StyledSectionForm>\n        <SectionTitle>Search movies</SectionTitle>\n        <SearchMovies onSubmit={handleSubmit} />{' '}\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </ListItem>\n          ))}\n        </List>\n      </StyledSectionForm>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '04e4af1b30c05d104e5298e1179d6dc9';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  // console.log(data);\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["StyledSection","styled","SectionTitle","StyledSectionForm","List","ListItem","StyledLink","Link","Form","Input","Button","onSubmit","e","preventDefault","query","target","elements","value","reset","toast","name","type","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","getMovie","fetchMovieByName","results","length","message","map","movie","to","id","state","from","title","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}