{"version":3,"file":"static/js/417.2d599782.chunk.js","mappings":"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","sources":["components/SharedLayout/LoadingDots.jsx","components/SharedLayout/SharedLayout.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { LoadingDots, Dot } from './SharedLayout.styled';\n\nexport const LoadingIndicator = () => {\n  return (\n    <LoadingDots>\n      <Dot delay=\"0s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".4s\" />\n    </LoadingDots>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledHeader = styled.header`\n  padding: 20px 50px;\n  color: rgb(0, 0, 0);\n  height: 100%;\n  background-color: #a4a4ab;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 20px 40px 0px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  font-size: 24px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n  color: black;\n  cursor: pointer;\n  padding: 5px;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: rgb(255 255 255);\n  }\n`;\n\nconst bounce = keyframes`\n  0%, 80%, 100% {\n    transform: scale(0);\n  }\n  40% {\n    transform: scale(1);\n  }\n`;\n\nexport const LoadingDots = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Dot = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  border-radius: 50%;\n  background-color: #1c85ff;\n  animation: ${bounce} 1s infinite ease-in-out;\n  animation-delay: ${({ delay }) => delay};\n`;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  margin-top: 30px;\n  gap: 40px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 200px;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const MovieInfo = styled.div`\n`;\n\nexport const MovieName = styled.h2`\n`;\n\nexport const MovieInfoText = styled.p`\n`;\n\nexport const MovieInfoTextBold = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 400;\n  font-weight: bold;\n`;\n\nexport const MoreInfoWrapper = styled.div`\n`;\n\nexport const MoreInfoHeader = styled.h3`\n`;\n\nexport const List = styled.ul`\n`;\n\nexport const ListItem = styled.li`\n`;\n\nexport const StyledLink = styled(Link)`\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Img,\n  List,\n  ListItem,\n  MoreInfoHeader,\n  MoreInfoWrapper,\n  MovieCardContainer,\n  MovieInfo,\n  MovieInfoText,\n  MovieInfoTextBold,\n  MovieName,\n  StyledLink,\n} from './MovieCard.styled';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst MovieCard = ({ movie }) => {\n  const {\n    original_title,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n  const location = useLocation();\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  if (!original_title) {\n    return <LoadingIndicator />;\n  }\n\n  return (\n    <>\n      <MovieCardContainer>\n        <Img src={posterUrl} alt={`${original_title} poster`} />\n\n        <MovieInfo>\n          <MovieName>\n            {original_title ?? 'Unknown'} ({releaseYear})\n          </MovieName>\n          <MovieInfoText>User Score: {userScore}</MovieInfoText>\n          <MovieInfoText>\n            <MovieInfoTextBold>Overview:</MovieInfoTextBold> {overview}\n          </MovieInfoText>\n\n          {genres && genres.length > 0 && (\n            <MovieInfoText>\n              <MovieInfoTextBold>Genres:</MovieInfoTextBold>\n              {genres.map(genre => genre.name).join(', ')}\n            </MovieInfoText>\n          )}\n        </MovieInfo>\n      </MovieCardContainer>\n\n      <MoreInfoWrapper>\n        <MoreInfoHeader>Additional information</MoreInfoHeader>\n\n        <List>\n          <ListItem>\n            <StyledLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </StyledLink>\n          </ListItem>\n\n          <ListItem>\n            <StyledLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </StyledLink>\n          </ListItem>\n        </List>\n      </MoreInfoWrapper>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  justify-content: center;\n  border: 0px;\n  background-color: rgb(211, 107, 107);\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  cursor: pointer;\n  outline: none;\n  padding: 10px;\n`;","import { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from '../services/api';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport { Button, Container, StyledLink } from './MovieDetails.styled';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Container>\n        <StyledLink to={location?.state?.from ?? '/'}>\n          <Button type=\"button\">\n            Go back\n          </Button>\n        </StyledLink>\n\n        <MovieCard movie={selectedMovie} />\n\n        <Suspense fallback={<LoadingIndicator />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '04e4af1b30c05d104e5298e1179d6dc9';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  // console.log(data);\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["LoadingIndicator","delay","StyledHeader","styled","StyledNavLink","NavLink","bounce","keyframes","LoadingDots","Dot","MovieCardContainer","Img","MovieInfo","MovieName","MovieInfoText","MovieInfoTextBold","MoreInfoWrapper","MoreInfoHeader","List","ListItem","StyledLink","Link","movie","original_title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","Container","Button","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","fetchMovieById","movieData","console","log","type","Suspense","fallback","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}